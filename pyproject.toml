[project]
name = "aws-exam-agent"
version = "0.1.0"
description = "AI エージェントによる AWS 試験問題自動生成・配信システム"
authors = [
    {name = "kobank-t", email = "kobank.t@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}

dependencies = [
    # AWS SDK
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    
    # データモデル・バリデーション
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # HTTP クライアント
    "httpx>=0.25.0",
    
    # ログ・監視
    "aws-lambda-powertools>=2.0.0",
    
    # ユーティリティ
    "python-dateutil>=2.8.0",
    

]

[tool.uv]
dev-dependencies = [
    # テスト
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    
    # AWS モック
    "moto>=4.0.0",
    
    # リンター・フォーマッター
    "ruff>=0.1.0",
    
    # 型チェック
    "mypy>=1.5.0",
    
    # pre-commit
    "pre-commit>=3.0.0",
    
    # 開発ユーティリティ
    "ipython>=8.0.0",
    "black>=23.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
target-version = "py312"
src = ["app", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["app", "tests"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "moto.*",
    "aws_lambda_powertools.*",
    "strands_agents.*",
    "boto3.*",
]
ignore_missing_imports = true



[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]